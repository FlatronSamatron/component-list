{"version":3,"sources":["components/TableList.js","utils/requests.js","components/AddComment.js","App.js","index.js"],"names":["TableList","data","useState","page","setPage","rowsPerPage","setRowsPerPage","columns","id","label","minWidth","rows","map","row","userId","title","body","classes","makeStyles","root","width","margin","container","maxHeight","useStyles","Paper","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","style","TableBody","slice","hover","role","tabIndex","value","format","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","postsApi","getPosts","axios","get","addPost","post","console","log","AddComment","open","setOpen","setUserId","setTitle","setBody","handleSubmit","e","a","preventDefault","JSON","stringify","button","background","border","borderRadius","boxShadow","color","height","padding","display","paper","position","transform","top","left","form","Button","onClick","Modal","onClose","aria-labelledby","aria-describedby","Container","maxWidth","Typography","variant","textAlign","onSubmit","Grid","spacing","item","xs","TextField","required","fullWidth","name","onChange","type","justify","App","setData","searchData","setSearchData","loading","setLoading","useEffect","res","fetchData","filterSearch","el","toString","toLowerCase","trim","indexOf","theme","marginLeft","direction","alignItems","Input","marginBottom","placeholder","result","filter","search","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d8183eb.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst TableList = ({data}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const columns = [\r\n        { id: 'userId', label: 'User Id', minWidth: 50 },\r\n        { id: 'title', label: 'Title', minWidth: 100 },\r\n        { id: 'body', label: 'Text', minWidth: 170 }\r\n    ];\r\n\r\n    \r\n    const rows = data.map((row)=>{\r\n        const {id, userId, title, body} = row\r\n        return {id, userId, title, body }\r\n    })\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: '80%',\r\n          margin: 'auto'\r\n        },\r\n        container: {\r\n          maxHeight: 550,\r\n        },\r\n    });\r\n    \r\n    const classes = useStyles()\r\n\r\n    return (\r\n    <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                {columns.map((column) => (\r\n                    <TableCell\r\n                    key={column.id}\r\n                    style={{ minWidth: column.minWidth }}\r\n                    >\r\n                    {column.label}\r\n                    </TableCell>\r\n                ))}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                        <TableCell key={column.id}>\r\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                        </TableCell>\r\n                        );\r\n                    })}\r\n                    </TableRow>\r\n                );\r\n                })}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </Paper>\r\n    )\r\n}\r\n\r\nexport default TableList\r\n","import axios from 'axios'\r\n\r\nconst postsApi = {\r\n    async getPosts() {\r\n        const {data} = await axios.get('http://jsonplaceholder.typicode.com/posts')\r\n        return data\r\n    },\r\n    async addPost (post) {\r\n        const {data} = await axios.post('http://jsonplaceholder.typicode.com/posts', post)\r\n        console.log(data)\r\n        return data\r\n    }\r\n}\r\n\r\nexport default postsApi","import React, {useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport postsApi from '../utils/requests'\r\n\r\nconst AddComment = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [userId, setUserId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const post = {\r\n            userId,\r\n            title,\r\n            body\r\n        }\r\n        \r\n        const res = await postsApi.addPost(JSON.stringify(post))\r\n\r\n        setUserId('')\r\n        setTitle('')\r\n        setBody('')\r\n        setOpen(false);\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        button: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: 3,\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            margin: '20px auto',\r\n            display: 'block'\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            border: '2px solid #000',\r\n            padding: '16px 32px 24px',\r\n            boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)',\r\n            transform: 'translate(-50%, 0)',\r\n            top: '10%',\r\n            left: '50%',\r\n            background: '#fff'\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n        },\r\n    });\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Button className={classes.button} onClick={handleOpen}>Add Post</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <div className={classes.paper}>\r\n                        <Typography component=\"h3\" variant=\"h3\" style={{padding:'40px 0',textAlign:'center'}}>\r\n                        Add Comment\r\n                        </Typography>\r\n                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"userId\"\r\n                                label=\"UserId\"\r\n                                name=\"userId\"\r\n                                onChange={(e)=>{setUserId(e.target.value)}}\r\n                                value={userId}\r\n         \r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"title\"\r\n                                label=\"Title\"\r\n                                name=\"title\"\r\n                                onChange={(e)=>{setTitle(e.target.value)}}\r\n                                value={title}\r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"text\"\r\n                                label=\"Text\"\r\n                                type=\"text\"\r\n                                id=\"text\"\r\n                                onChange={(e)=>{setBody(e.target.value)}}\r\n                                value={body}\r\n                            />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button className={classes.button} type=\"submit\">Add Post</Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                        </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddComment\r\n","import React,{useState, useEffect} from 'react'\nimport { Input, Container, Grid, makeStyles, CircularProgress } from '@material-ui/core';\n\nimport TabeList from './components/TableList'\nimport AddComment from './components/AddComment'\nimport postsApi from './utils/requests'\n\nfunction App() {\n\n  const [data, setData] = useState([])\n  const [searchData, setSearchData] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(()=>{\n    setLoading(true)\n    const fetchData = async () => {\n      const res = await postsApi.getPosts()\n      setData(res)\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  const filterSearch = ( el, value ) => {\n    return el.toString().toLowerCase().trim().indexOf(value.toString().toLowerCase().trim()) > -1\n  }\n  \n  const search = (value) => {\n      let result = data.filter((el)=> \n      filterSearch(el.title,value) ||\n      filterSearch(el.userId,value) ||\n      filterSearch(el.body,value))\n\n      setSearchData(result)\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  }));\n\n  \n  return (\n    <Container maxWidth=\"lg\" style={{padding:\"50px 0\"}}>\n      <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n        <Input \n          style={{marginBottom: '20px', width: '50%'}} \n          placeholder='Search' \n          onChange={(el)=>{search(el.target.value)}}\n        />\n        {loading ? <CircularProgress /> : <TabeList \n          data={!searchData \n          ? data : \n          searchData}\n        />}\n        <AddComment/>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}