{"version":3,"sources":["utils/requests.js","components/ModalContainer.js","components/TableList.js","components/AddComment.js","App.js","index.js"],"names":["postsApi","getPosts","axios","get","data","addPost","post","req","console","log","editPost","put","id","ModalContainer","open","handleClose","postInfo","useState","edit","setEdit","userId","setUserId","title","setTitle","body","setBody","useEffect","handleSubmit","e","a","preventDefault","JSON","stringify","classes","makeStyles","button","background","border","borderRadius","boxShadow","color","height","padding","margin","display","paper","position","width","transform","top","left","textArea","boxSizing","fontSize","form","useStyles","Modal","onClose","aria-labelledby","aria-describedby","Container","component","maxWidth","className","Typography","variant","style","textAlign","onSubmit","Grid","container","spacing","item","xs","TextField","pointerEvents","fullWidth","label","name","value","onChange","target","TextareaAutosize","type","Button","justify","TableList","page","setPage","rowsPerPage","setRowsPerPage","setPostInfo","setOpen","columns","minWidth","rows","map","row","root","maxHeight","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","slice","cursor","hover","onClick","handleOpen","format","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","AddComment","required","App","setData","searchData","setSearchData","loading","setLoading","res","fetchData","filterSearch","el","toString","toLowerCase","trim","includes","direction","alignItems","Input","marginBottom","placeholder","result","filter","search","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7a682a7.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst postsApi = {\r\n    async getPosts() {\r\n        const {data} = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n        return data\r\n    },\r\n    async addPost (post) {\r\n        const req = await axios.post('https://jsonplaceholder.typicode.com/posts', post)\r\n        console.log(req)\r\n        return req.data\r\n    },\r\n    async editPost (put,id) {\r\n        const req = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, put)\r\n        console.log(req)\r\n        return req.data\r\n    }\r\n}\r\n\r\nexport default postsApi","import React,{useState,useEffect} from 'react'\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport postsApi from '../utils/requests'\r\n\r\nconst ModalContainer = ({open,handleClose,postInfo}) => {\r\n\r\n    const[edit, setEdit] = useState(false)\r\n\r\n    const [userId, setUserId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n\r\n    useEffect(() => {\r\n       if(!edit){\r\n            setUserId(postInfo[1])\r\n            setTitle(postInfo[2])\r\n            setBody(postInfo[3])\r\n       }\r\n    }, [edit, postInfo])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setEdit(true)\r\n\r\n        if(edit){\r\n            const put = {\r\n                id: postInfo[0],\r\n                title,\r\n                body,\r\n                userId,\r\n            }\r\n\r\n            await postsApi.editPost(JSON.stringify(put),postInfo[0])\r\n            setEdit(false)\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        button: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: 3,\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            margin: '20px auto',\r\n            display: 'block'\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            border: '2px solid #000',\r\n            padding: '16px 32px 24px',\r\n            boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)',\r\n            transform: 'translate(-50%, 0)',\r\n            top: '10%',\r\n            left: '50%',\r\n            background: '#fff'\r\n        },\r\n        textArea: {\r\n            width: '100%',\r\n            boxSizing: 'border-box', \r\n            border: 'solid 1px #C6C4C6',\r\n            borderRadius: '5px',\r\n            padding: '15px',\r\n            fontSize: '17px',\r\n            color:'#232123'\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n        },\r\n    });\r\n\r\n    const classes = useStyles()\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                    <div className={classes.paper}>\r\n                        <Typography component=\"h3\" variant=\"h3\" style={{padding:'40px 0',textAlign:'center'}}>\r\n                        {edit ? 'Edit Post' : 'Post Info' }\r\n                        </Typography>\r\n                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                style={!edit ? {pointerEvents:'none'} : {pointerEvents:'auto'}}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"userId\"\r\n                                label=\"UserId\"\r\n                                name=\"userId\"\r\n                                value={userId}\r\n                                onChange={(e)=>{setUserId(e.target.value)}}\r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"title\"\r\n                                label=\"Title\"\r\n                                name=\"title\"\r\n                                value={title}\r\n                                onChange={(e)=>{setTitle(e.target.value)}}\r\n                                style={!edit ? {pointerEvents:'none'} : {pointerEvents:'auto'}}\r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextareaAutosize className={classes.textArea}\r\n                                variant=\"outlined\"\r\n                                name=\"text\"\r\n                                label=\"Text\"\r\n                                type=\"text\"\r\n                                id=\"text\"\r\n                                value={body}\r\n                                onChange={(e)=>{setBody(e.target.value)}}\r\n                                style={!edit ? {pointerEvents:'none'} : {pointerEvents:'auto'}}\r\n                            />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button className={classes.button} type=\"submit\">{edit ? 'Put Post' : 'Edit Post'}</Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                        </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalContainer\r\n","import React,{useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport ModalContainer from './ModalContainer'\r\n\r\n\r\nconst TableList = ({data}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [postInfo,setPostInfo] = useState([])\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleOpen = (post) => {\r\n        setPostInfo(post)\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const columns = [\r\n        { id: 'userId', label: 'User Id', minWidth: 50 },\r\n        { id: 'title', label: 'Title', minWidth: 100 },\r\n        { id: 'body', label: 'Text', minWidth: 170 }\r\n    ];\r\n\r\n    \r\n    const rows = data.map((row)=>{\r\n        const {id, userId, title, body} = row\r\n        return {id, userId, title, body }\r\n    })\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          width: '80%',\r\n          margin: 'auto'\r\n        },\r\n        container: {\r\n          maxHeight: 550,\r\n        }\r\n    });\r\n    \r\n    const classes = useStyles()\r\n\r\n    return (\r\n    <>\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                        key={column.id}\r\n                        style={{ minWidth: column.minWidth }}\r\n                        >\r\n                        {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    const post = [row.id,row.userId,row.title,row.body]\r\n                    return (\r\n                        <TableRow style={{cursor:'pointer'}} hover key={row.id} onClick={()=>handleOpen(post)}>\r\n                        {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                            <TableCell key={column.id}>\r\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                        </TableRow>\r\n                    );\r\n                    })}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n        <ModalContainer \r\n            open={open}\r\n            handleClose={()=>handleClose()}\r\n            postInfo={postInfo}\r\n        />  \r\n    </>\r\n    )\r\n}\r\n\r\nexport default TableList\r\n","import React, {useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport postsApi from '../utils/requests'\r\n\r\nconst AddComment = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [userId, setUserId] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const post = {\r\n            userId,\r\n            title,\r\n            body\r\n        }\r\n        \r\n        await postsApi.addPost(JSON.stringify(post))\r\n\r\n        setUserId('')\r\n        setTitle('')\r\n        setBody('')\r\n        setOpen(false);\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        button: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: 3,\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            padding: '0 30px',\r\n            margin: '20px auto',\r\n            display: 'block'\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            border: '2px solid #000',\r\n            padding: '16px 32px 24px',\r\n            boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)',\r\n            transform: 'translate(-50%, 0)',\r\n            top: '10%',\r\n            left: '50%',\r\n            background: '#fff'\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n        },\r\n    });\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Button className={classes.button} onClick={handleOpen}>Add Post</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <div className={classes.paper}>\r\n                        <Typography component=\"h3\" variant=\"h3\" style={{padding:'40px 0',textAlign:'center'}}>\r\n                        Add Comment\r\n                        </Typography>\r\n                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"userId\"\r\n                                label=\"UserId\"\r\n                                name=\"userId\"\r\n                                onChange={(e)=>{setUserId(e.target.value)}}\r\n                                value={userId}\r\n            \r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"title\"\r\n                                label=\"Title\"\r\n                                name=\"title\"\r\n                                onChange={(e)=>{setTitle(e.target.value)}}\r\n                                value={title}\r\n                            />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"text\"\r\n                                label=\"Text\"\r\n                                type=\"text\"\r\n                                id=\"text\"\r\n                                onChange={(e)=>{setBody(e.target.value)}}\r\n                                value={body}\r\n                            />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button className={classes.button} type=\"submit\">Add Post</Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                        </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddComment\r\n","import React,{useState, useEffect} from 'react'\nimport { Input, Container, Grid, CircularProgress } from '@material-ui/core';\n\nimport TabeList from './components/TableList'\nimport AddComment from './components/AddComment'\nimport postsApi from './utils/requests'\n\nfunction App() {\n\n  const [data, setData] = useState([])\n  const [searchData, setSearchData] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(()=>{\n    setLoading(true)\n    const fetchData = async () => {\n      const res = await postsApi.getPosts()\n      setData(res)\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  const filterSearch = ( el, value ) => {\n    return el.toString().toLowerCase().trim().includes(value.toString().toLowerCase().trim())\n  }\n  \n  const search = (value) => {\n      let result = data.filter((el)=> \n      filterSearch(el.title,value) ||\n      filterSearch(el.userId,value) ||\n      filterSearch(el.body,value))\n\n      setSearchData(result)\n  }\n\n  \n  return (\n    <Container maxWidth=\"lg\" style={{padding:\"50px 0\"}}>\n      <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n        <Input \n          style={{marginBottom: '20px', width: '50%'}} \n          placeholder='Search' \n          onChange={(el)=>{search(el.target.value)}}\n        />\n        {loading ? <CircularProgress /> : <TabeList \n          data={!searchData \n          ? data : \n          searchData}\n        />}\n        <AddComment/>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}